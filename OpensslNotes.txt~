Hashing:
========
stdin hashing (beware, without -n it will hash CRLF)
----------------------------------------------------
echo -n Alberto | openssl sha256

File Hashing:
-------------
openssl dgst -sha256 plain.txt

Symmetric cryptography:
======================
Encode with aes256 cbc into base64 (text)
-----------------------------------------
openssl enc -aes-256-cbc -base64 -in plain.txt -out encrypted.bin

Decrypt with aes256 cbc in base64
---------------------------------
openssl enc -aes-256-cbc -base64 -d -in encrypted.bin -pass pass:hello



Asymmetric cryptography:
========================

Generate key pair:
------------------
openssl genrsa -out key.pem 1024

Encrypt key pair:
-----------------
openssl rsa -in key.pem -des3 -out enc-key.pem

Extract public key from key pair:
---------------------------------
openssl rsa -in key.pem -pubout -out pub-key.pem

Encrypt in RSA in base64 output
-------------------------------
openssl rsautl -encrypt -in plain.txt -pubin -inkey pub-key.pem | openssl enc -base64

Decrypt in RSA base64 input
-------------------------------
cat encrypted.txt | openssl enc -base64 -d | openssl rsautl -decrypt -inkey key.pem

Digital Signature:
==================
Sign digitally (usually you "sign" a hash):
-------------------------------------------
openssl rsautl -sign -in plain.txt -inkey key.pem -out signature.txt

Verify signature (usually you verify a dgst [or hash] of a file)
----------------------------------------------------------------
openssl rsautl -verify -in signature.txt -inkey pub-key.pem -pubin > verified

Interesting link:
-----------------
http://users.dcc.uchile.cl/~pcamacho/tutorial/crypto/openssl/openssl_intro.html

